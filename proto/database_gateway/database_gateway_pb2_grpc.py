# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.database_gateway.database_gateway_pb2 as database__gateway__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DBGatewayServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryOutOfRange = channel.unary_unary(
            "/experiment.DBGatewayService/QueryOutOfRange",
            request_serializer=database__gateway__pb2.QueryOutOfRangeRequest.SerializeToString,
            response_deserializer=database__gateway__pb2.QueryOutOfRangeResponse.FromString,
        )
        self.QueryTemperature = channel.unary_unary(
            "/experiment.DBGatewayService/QueryTemperature",
            request_serializer=database__gateway__pb2.QueryTemperatureRequest.SerializeToString,
            response_deserializer=database__gateway__pb2.QueryTemperatureResponse.FromString,
        )
        self.AddTemperature = channel.unary_unary(
            "/experiment.DBGatewayService/AddTemperature",
            request_serializer=database__gateway__pb2.AddTemperatureRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class DBGatewayServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryOutOfRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def QueryTemperature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def AddTemperature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_DBGatewayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "QueryOutOfRange": grpc.unary_unary_rpc_method_handler(
            servicer.QueryOutOfRange,
            request_deserializer=database__gateway__pb2.QueryOutOfRangeRequest.FromString,
            response_serializer=database__gateway__pb2.QueryOutOfRangeResponse.SerializeToString,
        ),
        "QueryTemperature": grpc.unary_unary_rpc_method_handler(
            servicer.QueryTemperature,
            request_deserializer=database__gateway__pb2.QueryTemperatureRequest.FromString,
            response_serializer=database__gateway__pb2.QueryTemperatureResponse.SerializeToString,
        ),
        "AddTemperature": grpc.unary_unary_rpc_method_handler(
            servicer.AddTemperature,
            request_deserializer=database__gateway__pb2.AddTemperatureRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "experiment.DBGatewayService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class DBGatewayService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryOutOfRange(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/experiment.DBGatewayService/QueryOutOfRange",
            database__gateway__pb2.QueryOutOfRangeRequest.SerializeToString,
            database__gateway__pb2.QueryOutOfRangeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def QueryTemperature(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/experiment.DBGatewayService/QueryTemperature",
            database__gateway__pb2.QueryTemperatureRequest.SerializeToString,
            database__gateway__pb2.QueryTemperatureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def AddTemperature(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/experiment.DBGatewayService/AddTemperature",
            database__gateway__pb2.AddTemperatureRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
